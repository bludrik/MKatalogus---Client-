
package catalogue.endpoint;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CatalogueService", targetNamespace = "http://endpoint.catalogue/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CatalogueService {


    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleaseNameByIdService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleaseNameByIdService")
    @ResponseWrapper(localName = "getReleaseNameByIdServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleaseNameByIdServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getReleaseNameByIdServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getReleaseNameByIdServiceResponse")
    public String getReleaseNameByIdService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param title
     * @return
     *     returns java.util.List<catalogue.endpoint.MovieSubItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMoviesFilteredByTitleService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByTitleService")
    @ResponseWrapper(localName = "getMoviesFilteredByTitleServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByTitleServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByTitleServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByTitleServiceResponse")
    public List<MovieSubItem> getMoviesFilteredByTitleService(
        @WebParam(name = "title", targetNamespace = "")
        String title);

    /**
     * 
     * @param directorName
     * @return
     *     returns java.util.List<catalogue.endpoint.MovieSubItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMoviesFilteredByDirectorService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByDirectorService")
    @ResponseWrapper(localName = "getMoviesFilteredByDirectorServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByDirectorServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByDirectorServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByDirectorServiceResponse")
    public List<MovieSubItem> getMoviesFilteredByDirectorService(
        @WebParam(name = "directorName", targetNamespace = "")
        String directorName);

    /**
     * 
     * @param genre
     * @return
     *     returns java.util.List<catalogue.endpoint.MovieSubItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMoviesFilteredByGenreService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByGenreService")
    @ResponseWrapper(localName = "getMoviesFilteredByGenreServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByGenreServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByGenreServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByGenreServiceResponse")
    public List<MovieSubItem> getMoviesFilteredByGenreService(
        @WebParam(name = "genre", targetNamespace = "")
        String genre);

    /**
     * 
     * @param type
     * @return
     *     returns java.util.List<catalogue.endpoint.MovieSubItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMoviesFilteredByTypeService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByTypeService")
    @ResponseWrapper(localName = "getMoviesFilteredByTypeServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesFilteredByTypeServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByTypeServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMoviesFilteredByTypeServiceResponse")
    public List<MovieSubItem> getMoviesFilteredByTypeService(
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List<catalogue.endpoint.DirectorItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDirectorsFilteredByNameService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorsFilteredByNameService")
    @ResponseWrapper(localName = "getDirectorsFilteredByNameServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorsFilteredByNameServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getDirectorsFilteredByNameServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getDirectorsFilteredByNameServiceResponse")
    public List<DirectorItem> getDirectorsFilteredByNameService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param directorIdx
     * @param movie
     * @param genreIdx
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertMovieService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertMovieService")
    @ResponseWrapper(localName = "insertMovieServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertMovieServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/insertMovieServiceRequest", output = "http://endpoint.catalogue/CatalogueService/insertMovieServiceResponse")
    public String insertMovieService(
        @WebParam(name = "movie", targetNamespace = "")
        MovieItem movie,
        @WebParam(name = "genreIdx", targetNamespace = "")
        List<Integer> genreIdx,
        @WebParam(name = "directorIdx", targetNamespace = "")
        List<Integer> directorIdx);

    /**
     * 
     * @param director
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertDirectorService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertDirectorService")
    @ResponseWrapper(localName = "insertDirectorServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertDirectorServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/insertDirectorServiceRequest", output = "http://endpoint.catalogue/CatalogueService/insertDirectorServiceResponse")
    public String insertDirectorService(
        @WebParam(name = "director", targetNamespace = "")
        DirectorItem director);

    /**
     * 
     * @return
     *     returns java.util.List<catalogue.endpoint.DirectorItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDirectorsService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorsService")
    @ResponseWrapper(localName = "getDirectorsServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorsServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getDirectorsServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getDirectorsServiceResponse")
    public List<DirectorItem> getDirectorsService();

    /**
     * 
     * @return
     *     returns java.util.List<catalogue.endpoint.ReleaseItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleasesService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleasesService")
    @ResponseWrapper(localName = "getReleasesServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleasesServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getReleasesServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getReleasesServiceResponse")
    public List<ReleaseItem> getReleasesService();

    /**
     * 
     * @param id
     * @param modifiedDirectorIdx
     * @param modifiedGenreIdx
     * @param modifiedItem
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMovieService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateMovieService")
    @ResponseWrapper(localName = "updateMovieServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateMovieServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/updateMovieServiceRequest", output = "http://endpoint.catalogue/CatalogueService/updateMovieServiceResponse")
    public String updateMovieService(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "modifiedItem", targetNamespace = "")
        MovieItem modifiedItem,
        @WebParam(name = "modifiedGenreIdx", targetNamespace = "")
        List<Integer> modifiedGenreIdx,
        @WebParam(name = "modifiedDirectorIdx", targetNamespace = "")
        List<Integer> modifiedDirectorIdx);

    /**
     * 
     * @param id
     * @param director
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateDirectorService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateDirectorService")
    @ResponseWrapper(localName = "updateDirectorServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateDirectorServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/updateDirectorServiceRequest", output = "http://endpoint.catalogue/CatalogueService/updateDirectorServiceResponse")
    public String updateDirectorService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id,
        @WebParam(name = "director", targetNamespace = "")
        DirectorItem director);

    /**
     * 
     * @param pKeys
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteMoviesService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteMoviesService")
    @ResponseWrapper(localName = "deleteMoviesServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteMoviesServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/deleteMoviesServiceRequest", output = "http://endpoint.catalogue/CatalogueService/deleteMoviesServiceResponse")
    public String deleteMoviesService(
        @WebParam(name = "pKeys", targetNamespace = "")
        List<Integer> pKeys);

    /**
     * 
     * @param keys
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDirectorsService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteDirectorsService")
    @ResponseWrapper(localName = "deleteDirectorsServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteDirectorsServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/deleteDirectorsServiceRequest", output = "http://endpoint.catalogue/CatalogueService/deleteDirectorsServiceResponse")
    public String deleteDirectorsService(
        @WebParam(name = "keys", targetNamespace = "")
        List<Integer> keys);

    /**
     * 
     * @return
     *     returns java.util.List<catalogue.endpoint.GenreItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGenresService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenresService")
    @ResponseWrapper(localName = "getGenresServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenresServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getGenresServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getGenresServiceResponse")
    public List<GenreItem> getGenresService();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertGenreService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertGenreService")
    @ResponseWrapper(localName = "insertGenreServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertGenreServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/insertGenreServiceRequest", output = "http://endpoint.catalogue/CatalogueService/insertGenreServiceResponse")
    public String insertGenreService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteGenreService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteGenreService")
    @ResponseWrapper(localName = "deleteGenreServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteGenreServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/deleteGenreServiceRequest", output = "http://endpoint.catalogue/CatalogueService/deleteGenreServiceResponse")
    public String deleteGenreService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertReleaseService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertReleaseService")
    @ResponseWrapper(localName = "insertReleaseServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.InsertReleaseServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/insertReleaseServiceRequest", output = "http://endpoint.catalogue/CatalogueService/insertReleaseServiceResponse")
    public String insertReleaseService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteReleaseService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteReleaseService")
    @ResponseWrapper(localName = "deleteReleaseServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.DeleteReleaseServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/deleteReleaseServiceRequest", output = "http://endpoint.catalogue/CatalogueService/deleteReleaseServiceResponse")
    public String deleteReleaseService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param id
     * @param newName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateReleaseService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateReleaseService")
    @ResponseWrapper(localName = "updateReleaseServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateReleaseServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/updateReleaseServiceRequest", output = "http://endpoint.catalogue/CatalogueService/updateReleaseServiceResponse")
    public String updateReleaseService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id,
        @WebParam(name = "newName", targetNamespace = "")
        String newName);

    /**
     * 
     * @param key
     * @return
     *     returns catalogue.endpoint.MovieItem
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMovieByKeyService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMovieByKeyService")
    @ResponseWrapper(localName = "getMovieByKeyServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMovieByKeyServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMovieByKeyServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMovieByKeyServiceResponse")
    public MovieItem getMovieByKeyService(
        @WebParam(name = "key", targetNamespace = "")
        int key);

    /**
     * 
     * @param id
     * @param newName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateGenreService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateGenreService")
    @ResponseWrapper(localName = "updateGenreServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.UpdateGenreServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/updateGenreServiceRequest", output = "http://endpoint.catalogue/CatalogueService/updateGenreServiceResponse")
    public String updateGenreService(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "newName", targetNamespace = "")
        String newName);

    /**
     * 
     * @param movieId
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGenreOfMovieService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreOfMovieService")
    @ResponseWrapper(localName = "getGenreOfMovieServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreOfMovieServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getGenreOfMovieServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getGenreOfMovieServiceResponse")
    public List<Integer> getGenreOfMovieService(
        @WebParam(name = "movieId", targetNamespace = "")
        int movieId);

    /**
     * 
     * @param movieId
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDirectorOfMovieService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorOfMovieService")
    @ResponseWrapper(localName = "getDirectorOfMovieServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorOfMovieServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getDirectorOfMovieServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getDirectorOfMovieServiceResponse")
    public List<Integer> getDirectorOfMovieService(
        @WebParam(name = "movieId", targetNamespace = "")
        int movieId);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGenreIdByNameService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreIdByNameService")
    @ResponseWrapper(localName = "getGenreIdByNameServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreIdByNameServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getGenreIdByNameServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getGenreIdByNameServiceResponse")
    public Integer getGenreIdByNameService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDirectorNameByIdService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorNameByIdService")
    @ResponseWrapper(localName = "getDirectorNameByIdServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorNameByIdServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getDirectorNameByIdServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getDirectorNameByIdServiceResponse")
    public String getDirectorNameByIdService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @return
     *     returns java.util.List<catalogue.endpoint.MovieSubItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMoviesService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesService")
    @ResponseWrapper(localName = "getMoviesServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetMoviesServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getMoviesServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getMoviesServiceResponse")
    public List<MovieSubItem> getMoviesService();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleaseIdByNameService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleaseIdByNameService")
    @ResponseWrapper(localName = "getReleaseIdByNameServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetReleaseIdByNameServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getReleaseIdByNameServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getReleaseIdByNameServiceResponse")
    public Integer getReleaseIdByNameService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDirectorIdByNameService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorIdByNameService")
    @ResponseWrapper(localName = "getDirectorIdByNameServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetDirectorIdByNameServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getDirectorIdByNameServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getDirectorIdByNameServiceResponse")
    public Integer getDirectorIdByNameService(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGenreNameByIdService", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreNameByIdService")
    @ResponseWrapper(localName = "getGenreNameByIdServiceResponse", targetNamespace = "http://endpoint.catalogue/", className = "catalogue.endpoint.GetGenreNameByIdServiceResponse")
    @Action(input = "http://endpoint.catalogue/CatalogueService/getGenreNameByIdServiceRequest", output = "http://endpoint.catalogue/CatalogueService/getGenreNameByIdServiceResponse")
    public String getGenreNameByIdService(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

}
